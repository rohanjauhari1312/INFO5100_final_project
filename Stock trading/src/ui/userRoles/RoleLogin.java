/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.userRoles;

import Organizations.AdvisoryTeam;
import Organizations.ComplianceTeam;
import ui.Admin.CustomerSupportTeam;
import Organizations.ITDepartment;
import Organizations.Organization;
import Organizations.OrganizationDirectory;
import Organizations.RiskManagementTeam;
import Organizations.TradingDepartment;
import java.awt.CardLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Person;
import ui.Admin.Admin;
import ui.Admin.CustomerSupportDashboard;
import ui.Roles.BrokerageManager;
import ui.Roles.ComplianceOfficer;
import ui.Roles.RiskAnalyst;
import ui.Admin.ExchangeAdministrator;
import ui.Roles.Auditor;
import ui.Roles.FinancialAdvisor;
import ui.Roles.Role;
import ui.Roles.RoleDirectory;
/**
 *
 * @author rohanjauhari
 */
public class RoleLogin extends javax.swing.JPanel {

    /**
     * Creates new form OrganizationAdmin
     */
    JPanel userProcessContainer;
    String role;
//    OrganizationDirectory userDirectoryITD,userDirectoryTD,userDirectoryCT,userDirectoryAT;
    Admin admin;
    public RoleLogin(JPanel userProcessContainer, RoleDirectory roleDirectoryITD,RoleDirectory roleDirectoryTD,RoleDirectory roleDirectoryCT,RoleDirectory roleDirectoryAT,RoleDirectory roleDirectoryCST,RoleDirectory roleDirectoryRMT, Admin admin) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.admin = admin;

        ArrayList<Role> roleDirectory = new ArrayList();
        roleDirectory.addAll(roleDirectoryITD.getRoles());
        roleDirectory.addAll(roleDirectoryTD.getRoles());
        roleDirectory.addAll(roleDirectoryCT.getRoles());
        roleDirectory.addAll(roleDirectoryAT.getRoles());
        roleDirectory.addAll(roleDirectoryCST.getRoles());
        roleDirectory.addAll(roleDirectoryRMT.getRoles());
        HashMap<String,Integer> flag = new HashMap<>();
        for (Role o:roleDirectory){
            if (flag.get(o.getName())==null)
                cmbRole.addItem(o.getName());
            flag.put(o.getName(), 1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        cmbRole = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();

        jLabel1.setText("Role");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        cmbRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRoleActionPerformed(evt);
            }
        });

        jLabel4.setText("System Role Login");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(btnLogin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(172, 172, 172)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(152, 152, 152)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(164, 164, 164)
                                    .addComponent(jLabel2)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(cmbRole, 0, 90, Short.MAX_VALUE)))))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel4)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(btnLogin)
                .addContainerGap(338, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        Person pp=admin.validatePassword(txtUsername.getText() ,txtPassword.getText(),"system role");
        if (pp.getDesignation()!="System Role"){
            JOptionPane.showMessageDialog(this, "Sign in failed!");
            return;
        }
        if (pp!=null){
            if (role.equals("Auditor")){
                Auditor bm = new Auditor(userProcessContainer, admin,txtUsername.getText());
                userProcessContainer.add("BrokerageManager", bm);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            if (role.equals("Brokerage manager")){
                BrokerageManager bm = new BrokerageManager(userProcessContainer, admin,txtUsername.getText());
                userProcessContainer.add("BrokerageManager", bm);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            if (role.equals("Exchange Administrator")){
                ExchangeAdministrator ea = new ExchangeAdministrator(userProcessContainer, admin,txtUsername.getText());
                userProcessContainer.add("ExchangeAdministrator", ea);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            if (role.equals("Compliance Officer")){
                ComplianceOfficer co = new ComplianceOfficer(userProcessContainer, admin,txtUsername.getText());
                userProcessContainer.add("ComplianceOfficer", co);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            if (role.equals("Financial Advisor")){
                try {
                    FinancialAdvisor fa = new FinancialAdvisor(userProcessContainer, admin,txtUsername.getText());
                    userProcessContainer.add("FinancialAdvisor", fa);
                    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                } catch (IOException ex) {
                    Logger.getLogger(RoleLogin.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(RoleLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (role.equals("Customer Support Agent")){
                CustomerSupportDashboard csa = new CustomerSupportDashboard(userProcessContainer, admin,txtUsername.getText());
                userProcessContainer.add("CustomerSupportDashboard", csa);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            if (role.equals("Risk Analyst")){
                try {
                    RiskAnalyst ra = new RiskAnalyst(userProcessContainer,admin,txtUsername.getText(), txtPassword.getText());
                    userProcessContainer.add("RiskAnalyst", ra);
                    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                } catch (IOException ex) {
                    Logger.getLogger(RoleLogin.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(RoleLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
            JOptionPane.showMessageDialog(this, "Sign in failed!");
    }//GEN-LAST:event_btnLoginActionPerformed

    private void cmbRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRoleActionPerformed
        // TODO add your handling code here:
        role = cmbRole.getSelectedItem().toString();
    }//GEN-LAST:event_cmbRoleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
